[xmra]
# requires imagemagick
extract_mapshots = True

# requires matplotlib and imagemagick
extract_radars = True

# Requires nothing
parse_entities = True

# Directories for generated resources
resources_dir = ~/.xonotic/repo_resources
packages_dir = %(resources_dir)s/packages/
mapshots_dir = %(resources_dir)s/mapshots/
radars_dir = %(resources_dir)s/radars/
entities_dir = %(resources_dir)s/entities/
bsp_dir = %(resources_dir)s/bsp/
data_dir = %(resources_dir)s/data/

# db settings
db_name = map_repo
db_user = xonotic
db_password = password
db_host = localhost
db_port = 5432

# api settings
api_host = localhost
api_port = 8010

# for CORS
web_host = www.xonotic-repo.local
web_port = 80

# Logging configuration
[loggers]
keys = root, sqlalchemy

[handlers]
keys = console, error_file

[formatters]
keys = generic

[logger_root]
level    = WARN
handlers = console, error_file

[logger_sqlalchemy]
# INFO logs SQL queries, DEBUG logs queries and results, and WARN logs neither
level = WARN
handlers =
qualname = sqlalchemy.engine

[handler_console]
class     = StreamHandler
args      = (sys.stderr,)
level     = NOTSET
formatter = generic

[handler_error_file]
class     = logging.handlers.RotatingFileHandler
formatter = generic
args      = ('~/xmr.log', 'a', 50000000, 5)

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s